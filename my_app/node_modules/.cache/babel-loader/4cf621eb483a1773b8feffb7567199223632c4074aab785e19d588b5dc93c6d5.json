{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester 5\\\\SE theory\\\\SE Project\\\\Disease_Detection\\\\my_app\\\\src\\\\Components\\\\Mainpage\\\\Components\\\\ModelML\\\\ModelML.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ModelML.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelML = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null); // To store uploaded image\n  const [result, setResult] = useState(\"\"); // To store detection result text\n\n  // Handle file selection\n  const handleImageUpload = event => {\n    const file = event.target.files[0]; // Get the uploaded file\n    if (file) {\n      setSelectedImage(URL.createObjectURL(file)); // Create a preview URL\n      setResult(\"Analyzing image...\"); // Simulated result text for now\n      // Here you can integrate an API or function to analyze the image\n      setTimeout(() => {\n        setResult(\"Disease detected: Powdery Mildew\"); // Replace with actual API results\n      }, 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"model-h1\",\n      children: \"Upload Pics Here For Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Uploaded Preview\",\n        className: \"preview-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ModelML, \"dNHAzpXiBrG705HWJZ2PomboOb4=\");\n_c = ModelML;\nexport default ModelML;\nvar _c;\n$RefreshReg$(_c, \"ModelML\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ModelML","_s","selectedImage","setSelectedImage","result","setResult","handleImageUpload","event","file","target","files","URL","createObjectURL","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","_c","$RefreshReg$"],"sources":["E:/Semester 5/SE theory/SE Project/Disease_Detection/my_app/src/Components/Mainpage/Components/ModelML/ModelML.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ModelML.css\";\r\n\r\nconst ModelML = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null); // To store uploaded image\r\n  const [result, setResult] = useState(\"\"); // To store detection result text\r\n\r\n  // Handle file selection\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0]; // Get the uploaded file\r\n    if (file) {\r\n      setSelectedImage(URL.createObjectURL(file)); // Create a preview URL\r\n      setResult(\"Analyzing image...\"); // Simulated result text for now\r\n      // Here you can integrate an API or function to analyze the image\r\n      setTimeout(() => {\r\n        setResult(\"Disease detected: Powdery Mildew\"); // Replace with actual API results\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"model-container\">\r\n      <h1 className=\"model-h1\">Upload Pics Here For Disease Detection</h1>\r\n      \r\n      {/* File upload input */}\r\n      <input \r\n        type=\"file\" \r\n        accept=\"image/*\" \r\n        onChange={handleImageUpload} \r\n        className=\"file-input\"\r\n      />\r\n\r\n      {/* Display uploaded image */}\r\n      {selectedImage && (\r\n        <div className=\"image-preview\">\r\n          <img src={selectedImage} alt=\"Uploaded Preview\" className=\"preview-img\" />\r\n        </div>\r\n      )}\r\n\r\n      {/* Display results */}\r\n      {result && (\r\n        <div className=\"result-box\">\r\n          <h3>Result:</h3>\r\n          <p>{result}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelML;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAIF,IAAI,EAAE;MACRL,gBAAgB,CAACQ,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7CH,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC;MACjC;MACAQ,UAAU,CAAC,MAAM;QACfR,SAAS,CAAC,kCAAkC,CAAC,CAAC,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAIe,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpEpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEhB,iBAAkB;MAC5BQ,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EAGDjB,aAAa,iBACZH,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BhB,OAAA;QAAKwB,GAAG,EAAErB,aAAc;QAACsB,GAAG,EAAC,kBAAkB;QAACV,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CACN,EAGAf,MAAM,iBACLL,OAAA;MAAKe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBhB,OAAA;QAAAgB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBpB,OAAA;QAAAgB,QAAA,EAAIX;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA7CID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}